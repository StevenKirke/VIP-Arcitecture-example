//
//  FirstIterator.swift
//  Clean SWift Example
//
//  Created by Steven Kirke on 06.12.2023.
//

import Foundation

protocol IFirstIterator: AnyObject {
	// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ (—Å–µ—Ç—å, –º–æ–∫, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏. —Ç. –ø)
	func featchData(_ request: FirstModel.Request)
}

final class FirstIterator {
	// –ü–æ–¥–∫–ª—é—á–∞–µ–º Presenter –ø—Ä–æ—Ç–æ–∫–æ–ª
	private var presenter: IFirstPresenter?

	internal init(presenter: IFirstPresenter? = nil) {
		self.presenter = presenter
	}
}

extension FirstIterator: IFirstIterator {
	func featchData(_ request: FirstModel.Request) {
		// –ü—Ä–∏—Ö–æ–¥—è—Ç –∫–∞–∫–∏–µ –ª–∏–±–æ –¥–∞–Ω–Ω—ã–µ
		// –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –º–∞—Å—Å–∏–≤ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π 1 —Å–µ–∫—É–Ω–¥–∞
		// –ú–æ–¥–µ–ª–∏—Ä—É–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–µ—Ä–≤–µ—Ä–∞,
		// –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
		DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) { [weak self] in
			guard let self = self else { return }
			let currentAnimal = request.currernAnimal.components(separatedBy: " ")
			let lowerText = currentAnimal[0].lowercased()
			let currentModel: FirstModel.Responce

			switch lowerText {
			case "cat":
					currentModel = FirstModel.Responce(
						id: "1",
						currentAnimal: "CAT",
						discriptionAnimal: "üò∏",
						error: nil
					)
			case "mouse":
					currentModel = FirstModel.Responce(
						id: "2",
						currentAnimal: "MOUSE",
						discriptionAnimal: "üê≠",
						error: nil
					)
			default:
					currentModel = FirstModel.Responce(
						id: "",
						currentAnimal: "",
						discriptionAnimal: "",
						error: "No animal selected!"
					)
			}
			presenter?.present(currentModel)
		}
	}
}
